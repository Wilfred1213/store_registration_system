# Generated by Django 3.2.3 on 2021-12-28 16:49

from django.db import migrations, models
import django.db.models.deletion
import personas.validators
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('escuela', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=40)),
                ('apellidos', models.CharField(max_length=40)),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], default='F', max_length=1)),
                ('fecha_de_nacimiento', models.DateField(validators=[personas.validators.validate_date_is_past])),
                ('telefono_1', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono de contacto 1')),
                ('telefono_2', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono de contacto 2')),
                ('correo_electronico', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Correo electrónico personal')),
                ('nie', models.CharField(blank=True, max_length=12, null=True, unique=True, verbose_name='NIE')),
                ('posee_partida', models.BooleanField(default=True, help_text='Si el estudiante no posee partida de nacimiento se debe demostrar un trámite áctivo para obtenerla.', verbose_name='Posee partida de nacimiento')),
                ('nacionalidad', models.CharField(choices=[('S', 'Salvadoreña'), ('H', 'Hondureña'), ('G', 'Guatemalteca'), ('N', 'Nicaragüense'), ('C', 'Costaricence'), ('P', 'Panameña'), ('E', 'Estadounidense'), ('O', 'Otros')], default='S', max_length=1)),
                ('direccion_de_residencia', models.CharField(blank=True, max_length=200, null=True, verbose_name='Dirección de residencia')),
                ('etnia', models.CharField(choices=[('N', 'Ninguna'), ('K', 'Kakawira'), ('L', 'Lenca'), ('N', 'Nahuat-Pipil')], default='N', max_length=1)),
                ('es_autista', models.BooleanField(verbose_name='Transtorno del espectro autista')),
                ('sordera', models.BooleanField()),
                ('ceguera', models.BooleanField()),
                ('baja_vision', models.BooleanField(verbose_name='Baja visión')),
                ('down', models.BooleanField(default=False, verbose_name='Síndrome de Down')),
                ('discapacidad_motora', models.BooleanField()),
                ('discapacidad_intelectual', models.BooleanField()),
                ('embarazo', models.BooleanField()),
                ('otro', models.CharField(blank=True, help_text='Describa cualquier condición adicional de salud.', max_length=100, null=True)),
                ('usa_medicamentos', models.BooleanField(default=False, verbose_name='¿El estudiante toma algún medicamento prescrito permanentemente?')),
                ('medicamentos', models.CharField(blank=True, max_length=200, verbose_name='Escriba el nombre de los medicamentos')),
                ('tipo_de_sangre', models.CharField(blank=True, choices=[('A+', 'A Rh positivo(A rh+)'), ('A-', 'A Rh negativo(A rh-)'), ('B+', 'B Rh positivo(B rh+)'), ('B-', 'B Rh negativo(B rh-)'), ('O+', 'O Rh positivo(O rh+)'), ('O-', 'O Rh negativo(O rh-)'), ('AB+', 'AB Rh positivo(AB rh+)'), ('AB-', 'AB Rh negativo(AB rh-)')], max_length=3)),
                ('estado_civil', models.CharField(choices=[('S', 'Soltero'), ('C', 'Casado'), ('D', 'Divorciado'), ('U', 'Unión libre'), ('O', 'Otro')], default='S', max_length=1)),
                ('roommate', models.CharField(choices=[('M', 'Madre'), ('D', 'Padre'), ('P', 'Padre y madre'), ('F', 'Otro familiar'), ('S', 'Solo'), ('O', 'Otros')], default='P', max_length=1, verbose_name='Personas con quienes vive el estudiante')),
                ('trabaja', models.BooleanField(verbose_name='¿El Estudiante trabaja?')),
                ('dependencia_economica', models.CharField(choices=[('M', 'Madre'), ('D', 'Padre'), ('P', 'Padre y madre'), ('F', 'Otro familiar'), ('S', 'Solo'), ('O', 'Otros')], default='P', max_length=1)),
                ('zona_de_residencia', models.CharField(choices=[('U', 'Urbana'), ('R', 'Rural')], default='U', max_length=1)),
                ('utiliza_vehiculo', models.BooleanField(verbose_name='Utiliza Vehículo')),
                ('utiliza_transporte_publico', models.BooleanField(verbose_name='Utiliza transporte público')),
                ('camina_a_la_escuela', models.BooleanField()),
                ('otro_medio_de_transporte', models.BooleanField()),
                ('distancia', models.PositiveSmallIntegerField(help_text='Ingrese la distancia en KM de la vivienda del estudiante al centro educativo.', verbose_name='Distancia de vivienda al centro escolar')),
                ('posee_refrigerador', models.BooleanField(default=True)),
                ('posee_televisor', models.BooleanField(default=True)),
                ('posee_celular_con_acceso_a_internet', models.BooleanField(default=True)),
                ('posee_radio', models.BooleanField(default=True, verbose_name='Posee radio o equipo de sonido')),
                ('posee_computadora', models.BooleanField()),
                ('posee_tablet', models.BooleanField()),
                ('posee_energia', models.BooleanField(default=True, verbose_name='Posee energía eléctrica')),
                ('fuente_de_agua', models.CharField(choices=[('A', 'Servicio de agua potable en casa'), ('P', 'Pila, chorro público o cantarera'), ('Z', 'Pozo'), ('I', 'Pipa'), ('R', 'Río, Laguna o nacimiento'), ('L', 'Aguas lluvias'), ('O', 'Otros')], default='A', max_length=1)),
                ('piso', models.CharField(choices=[('L', 'Ladrillo de cemento'), ('C', 'Cerámica'), ('M', 'Cemento'), ('T', 'Tierra'), ('O', 'Otro')], default='L', help_text='Material principal del piso de la casa del estudiante', max_length=1)),
                ('tipo_de_sanitario', models.CharField(choices=[('T', 'Tasa conectada a alcantarillado'), ('F', 'Fosa séptica'), ('O', 'Otro')], default='T', max_length=1)),
                ('internet_residencial', models.BooleanField()),
                ('compania_internet', models.CharField(blank=True, choices=[('T', 'Tigo'), ('C', 'Claro'), ('J', 'Japi'), ('O', 'Otro')], help_text='Si posee internet residencial indique la compañia.', max_length=1, null=True)),
                ('cantidad_cohabitantes', models.PositiveSmallIntegerField(help_text='Indique la cantidad de personas que vivien con el estudiante')),
                ('menores_en_casa', models.BooleanField(verbose_name='Viven menores de 18 años con el estudiante')),
                ('relacion_de_responsable', models.CharField(choices=[('P', 'Padre'), ('M', 'Madre'), ('T', 'Tío/Tía'), ('A', 'Abuelo/Abuela'), ('H', 'Hermano/Hermana'), ('O', 'Otros')], default='M', max_length=1, verbose_name='Relación familiar de responsable con estudiante.')),
                ('activo', models.BooleanField(default=True, help_text='Desmarcar si el estudiante retira documentos')),
                ('retirado', models.BooleanField(default=False, help_text='Marcar si el estudiante se retira de la institución')),
                ('fecha_de_retiro', models.DateField(blank=True, null=True)),
                ('motivo_de_retiro', models.CharField(blank=True, max_length=100)),
                ('escuela_previa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='escuela.escuela')),
                ('estudiantes_en_la_misma_casa', models.ManyToManyField(blank=True, help_text='Ingrese a menores de edad que vivien con el estudiante y que son estudiantes de la institución educativa', related_name='_personas_estudiante_estudiantes_en_la_misma_casa_+', to='personas.Estudiante')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Responsable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=40)),
                ('apellidos', models.CharField(max_length=40)),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], default='F', max_length=1)),
                ('fecha_de_nacimiento', models.DateField(validators=[personas.validators.validate_date_is_past])),
                ('telefono_1', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono de contacto 1')),
                ('telefono_2', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono de contacto 2')),
                ('correo_electronico', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Correo electrónico personal')),
                ('dui', models.CharField(max_length=25, unique=True, verbose_name='DUI')),
                ('situacion_laboral', models.CharField(choices=[('E', 'Empleado'), ('D', 'Desempleado'), ('I', 'Empleo Informal'), ('A', 'Ama de Casa'), ('M', 'Empresario'), ('P', 'Profesional autónomo')], default='D', max_length=20, verbose_name='Situación Laboral')),
                ('direccion_de_residencia', models.CharField(blank=True, max_length=200, null=True)),
                ('observaciones', models.TextField(blank=True, help_text='Ingrese información adicional relevante, como uso de otros documentos que no son DUI o alguna particularidad', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=40)),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personas.departamento')),
            ],
        ),
        migrations.CreateModel(
            name='MenorDeEdad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=40)),
                ('apellidos', models.CharField(max_length=40)),
                ('fecha_de_nacimiento', models.DateField(blank=True, null=True, validators=[personas.validators.validate_date_is_past])),
                ('estudia', models.BooleanField(verbose_name='¿El menor estudia?')),
                ('medio_de_transporte', models.CharField(blank=True, choices=[('B', 'Bicicleta'), ('V', 'Vehículo'), ('P', 'Transpote Público'), ('E', 'Transporte Escolar'), ('M', 'Motocicleta'), ('C', 'Camina'), ('O', 'Otro')], help_text='Medio de transporte principal del menor', max_length=1, null=True)),
                ('institucion_educativa', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='escuela.escuela', verbose_name='Institución Educativa del menor')),
            ],
            options={
                'verbose_name': ' Menor de edad',
                'verbose_name_plural': 'Menores de edad',
            },
        ),
        migrations.CreateModel(
            name='Familia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relacion', models.CharField(choices=[('P', 'Padre'), ('M', 'Madre'), ('T', 'Tío/Tía'), ('A', 'Abuelo/Abuela'), ('H', 'Hermano/Hermana'), ('O', 'Otros')], default='M', max_length=1, verbose_name='Relación')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personas.estudiante')),
                ('familiar', models.ForeignKey(help_text='Seleccione un familiar para el estudiante', on_delete=django.db.models.deletion.CASCADE, to='personas.responsable')),
            ],
            options={
                'verbose_name': 'Familiar',
                'verbose_name_plural': 'Familiares',
            },
        ),
        migrations.CreateModel(
            name='EstudiantesYMenores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personas.estudiante')),
                ('menor_de_edad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personas.menordeedad')),
            ],
            options={
                'verbose_name': 'Menores que habitan en la misma casa con el estudiante',
                'verbose_name_plural': 'Menores que habitan en la misma casa con el estudiante',
            },
        ),
        migrations.AddField(
            model_name='estudiante',
            name='familiares',
            field=models.ManyToManyField(through='personas.Familia', to='personas.Responsable'),
        ),
        migrations.AddField(
            model_name='estudiante',
            name='grado_matriculado',
            field=models.ForeignKey(help_text='Nivel educativo en que el estudiante queda matriculado', null=True, on_delete=django.db.models.deletion.CASCADE, to='escuela.niveleducativo'),
        ),
        migrations.AddField(
            model_name='estudiante',
            name='menores_cohabitantes',
            field=models.ManyToManyField(help_text='Ingrese a menores de edad que viven con el estudiante y que no son estudiantes de la institución educativa', through='personas.EstudiantesYMenores', to='personas.MenorDeEdad'),
        ),
        migrations.AddField(
            model_name='estudiante',
            name='municipio_de_nacimiento',
            field=models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='personas.municipio'),
        ),
        migrations.AddField(
            model_name='estudiante',
            name='municipio_de_residencia',
            field=models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reside_en', to='personas.municipio'),
        ),
        migrations.AddField(
            model_name='estudiante',
            name='responsable',
            field=models.ForeignKey(help_text='Persona autorizada a hacer trámites del estudiantes.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='responsable_de', to='personas.responsable'),
        ),
        migrations.AddField(
            model_name='estudiante',
            name='seccion',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='grado_matriculado', chained_model_field='nivel_educativo', null=True, on_delete=django.db.models.deletion.CASCADE, to='escuela.seccion', verbose_name='Sección 2021'),
        ),
        migrations.AddField(
            model_name='estudiante',
            name='seccion2022',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='seccion_2022', to='escuela.seccion', verbose_name='Sección 2022'),
        ),
    ]
